<?xml version="1.0" encoding="utf-8"?>
<kiln:root xmlns:kiln="http://www.kcl.ac.uk/artshums/depts/ddh/kiln/ns/1.0"
           xmlns:tei="http://www.tei-c.org/ns/1.0"
           xmlns:xi="http://www.w3.org/2001/XInclude"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <xsl:import href="cocoon://_internal/template/xsl/stylesheets/solr/search.xsl" />

  <kiln:parent>
    <xi:include href="base.xml" />
  </kiln:parent>

  <kiln:child>
    <kiln:block name="title">
      <xsl:text>Search</xsl:text>
      <kiln:super />
    </kiln:block>

    <kiln:block name="page-header">
      <div class="page-header">
        <h1 style="margin-bottom: 0;">Search</h1>
      </div>
    </kiln:block>

    <kiln:block name="content">
      <xsl:variable name="fq">
        <xsl:call-template name="get-filter-query" />
      </xsl:variable>

      <div class="span4">
        <h2>Facets</h2>

        <p>In this example, faceting is not enabled, since the data it
        requires is not present.</p>
      </div>

      <xsl:variable name="start" select="/aggregation/response/result/@start" />
      <xsl:variable name="rows"
                    select="/aggregation/response/lst/lst[@name = 'params']/str[@name = 'rows']" />
      <xsl:variable name="page" select="count(/aggregation/response/result/doc)" />
      <xsl:variable name="total" select="/aggregation/response/result/@numFound" />

      <div class="span8">
        <h2>
          <xsl:text>Results </xsl:text>
          <small>
            <xsl:text>Showing </xsl:text>
            <xsl:value-of select="$start + 1" />
            <xsl:text> to </xsl:text>
            <xsl:value-of select="$start + $page" />
            <xsl:text> of </xsl:text>
            <xsl:value-of select="$total" />
          </small>
        </h2>
        <p>
          <xsl:call-template name="search-filters" />
        </p>
        <table class="table table-bordered table-striped">
          <thead>
            <tr>
              <th>#</th>
              <th>Record</th>
            </tr>
          </thead>
          <tbody>
            <xsl:for-each select="/aggregation/response/result/doc">
              <tr>
                <td>
                  <xsl:value-of select="$start + position()" />
                </td>
                <td>
                  <xsl:variable name="document-id" select="str[@name = 'document_id']" />
                  <xsl:variable name="path"
                                select="/aggregation/files/file[@xml:id = $document-id]/@path" />

                  <a href="/{$path}/{str[@name = 'record_id']}">
                    <xsl:value-of select="str[@name = 'document_title']" />
                    <xsl:text>: </xsl:text>
                    <xsl:value-of select="str[@name = 'record_title']" />
                  </a>
                </td>
              </tr>
            </xsl:for-each>
          </tbody>
        </table>

        <div class="pagination pagination-centered">
          <ul>
            <xsl:choose>
              <xsl:when test="$start = 0">
                <li class="disabled">
                  <a href="">Prev</a>
                </li>
              </xsl:when>
              <xsl:otherwise>
                <li>
                  <a href="/search/{$fq}start={$start - $rows}/">Prev</a>
                </li>
              </xsl:otherwise>
            </xsl:choose>

            <xsl:for-each select="1 to xs:integer(ceiling($total div $rows))">
              <xsl:variable name="cur" select="$rows * . - $rows" />

              <li>
                <xsl:if test="$cur = $start">
                  <xsl:attribute name="class">active</xsl:attribute>
                </xsl:if>
                <a href="/search/{$fq}start={$cur}/">
                  <xsl:value-of select="." />
                </a>
              </li>
            </xsl:for-each>

            <xsl:choose>
              <xsl:when test="$start + $rows > $total">
                <li class="disabled">
                  <a href="">Next</a>
                </li>
              </xsl:when>
              <xsl:otherwise>
                <li>
                  <a href="/search/{$fq}start={$start + $rows}/">Next</a>
                </li>
              </xsl:otherwise>
            </xsl:choose>
          </ul>
        </div>
      </div>
    </kiln:block>
  </kiln:child>
</kiln:root>
